---
import Container from "../Container.astro";
import Altbau from "../icons/Altbau.astro";
import Beleuchtung from "../icons/Beleuchtung.astro";
import Check from "../icons/Check.astro";
import Neubau from "../icons/Neubau.astro";
import Notdienst from "../icons/Notdienst.astro";
import Sicherheit from "../icons/Sicherheit.astro";
import NoServiceFound from "./NoServiceFound.astro";
import ServiceCard from "./ServiceCard.astro";
---

<section class="bg-white py-12">
  <Container>
    <div class="text-center">
      <h2>Wir bringen Licht ins Haus</h2>

      <p class="mt-4 text-base text-gray-700 sm:mt-8">
        Lorem ipsum dolor sit amet, consectetur adipis elit
      </p>
    </div>

    <div class="grid grid-cols-3 gap-12 cards">
      <div class="hide">
        <ServiceCard
          text="Innenbeleuchtung, Außenbeleuchtung"
          title="Beleuchtung"
        >
          <Beleuchtung />
        </ServiceCard>
      </div>

      <div class="hide">
        <ServiceCard text="Lorem" title="Neubau">
          <Neubau />
        </ServiceCard>
      </div>

      <div class="hide">
        <ServiceCard text="Lorem" title="Sicherheit">
          <Sicherheit />
        </ServiceCard>
      </div>

      <div class="hide">
        <ServiceCard text="Lorem" title="Altbau">
          <Altbau />
        </ServiceCard>
      </div>

      <div class="hide">
        <ServiceCard text="Lorem" title="Geräteprüfung">
          <Check />
        </ServiceCard>
      </div>

      <div class="hide">
        <ServiceCard text="Lorem" title="Notdienst">
          <Notdienst />
        </ServiceCard>
      </div>
    </div>
    <NoServiceFound />
  </Container>
</section>

<script>
  const cardsContainer = document.querySelector<HTMLElement>(".cards");

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        entry.target
          .querySelectorAll<HTMLElement>(".hide")
          .forEach((c, idx) => {
            c.style.setProperty("--delay", `${idx * 200}ms`);

            if (entry.isIntersecting) c.classList.add("show");
          });
      });
    },
    {
      threshold: 0.25,
    }
  );

  if (cardsContainer) {
    observer.observe(cardsContainer);
  }
</script>

<style>
  .hide {
    @apply opacity-0 transition-all duration-500 ease-in-out blur-md scale-150 -translate-x-full delay-[var(--delay)];
  }

  .show {
    @apply opacity-100 transition-all duration-500 ease-in-out blur-none scale-100  -translate-x-0 delay-[var(--delay)];
  }
</style>
